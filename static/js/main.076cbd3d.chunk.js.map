{"version":3,"sources":["components/Blip.js","components/Button.js","components/Line.js","objects/Packet.js","objects/Node.js","App.js","config/config.js","reportWebVitals.js","index.js"],"names":["Blip","node","className","onDrag","onClick","pos","id","peers","defaultClassName","position","event","x","y","onMouseDown","bounds","Object","keys","length","map","peer","Button","title","Line","from","to","offset","x1","y1","x2","y2","Packet","props","this","data","destination","route","station","Node","updatePos","addPeer","removePeer","sendData","dest","packet","sourceID","recievePacket","relayPacket","push","packets","openPacket","console","log","handlePacket","pop","uuid","packetHandler","setInterval","App","useState","nodes","setNodes","links","setLinks","createNode","useEffect","updatedLinks","values","linkID","sort","join","mouseDownHandler","button","updateNodes","clearInterval","destroyNode","updatedNodes","forEach","neigh","Math","hypot","updateNodePos","width","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.076cbd3d.chunk.js","sourcesContent":["import React from \"react\"\r\nimport Draggable from \"react-draggable\"\r\n\r\nexport default function Blip({ node, className, onDrag, onClick }) {\r\n    const { id, pos, peers } = node\r\n\r\n    return (\r\n        <Draggable\r\n            defaultClassName={`absolute ${className}`}\r\n            position={pos}\r\n            onDrag={(event, { x, y }) => onDrag({ x, y })}\r\n            onMouseDown={event => onClick(event)}\r\n\r\n            bounds='parent'\r\n        >\r\n            <div\r\n                className='node transition-color select-none font-mono text-white bg-green-600 rounded-full shadow-xl w-16 h-16 flex flex-col justify-center items-center hover:bg-green-500 overflow-visible whitespace-nowrap hover:animate-ping'>\r\n                <div className='text-xs font-bold'>{pos.x + ' ' + pos.y}</div>\r\n                <div className='flex-col text-xs peers hidden absolute left-full ml-2 p-1 bg-gray-500 rounded shadow-xl'>\r\n                    <p className='place-self-center'>{Object.keys(peers).length === 0 ? 'lonely...' : 'PEERS'}</p>\r\n                    <hr className='my-0.5' />\r\n                    {Object.keys(peers).map(peer => <p key={peer}>{peer}</p>)}\r\n                </div>\r\n\r\n                <div className='absolute transition-all duration-400 ease-out node-range z-0 bg-transparent rounded-full border w-0 h-0 opacity-0'></div>\r\n            </div>\r\n        </Draggable>\r\n    )\r\n}","export default function Button({ onClick, title }) {\r\n    return (\r\n        <div className='rounded-lg border-2 border-gray-400'>\r\n            <button\r\n                title={title}\r\n                className='flex justify-center items-center font-bold text-white bg-blue-500 leading-none p-3 px-3 w-40 max-w-prose border-b-4  border-blue-800 rounded-md hover:bg-blue-400 active:border-b-2 -mt-0.5 active:mt-0'\r\n                onClick={onClick}\r\n            >{title}</button>\r\n        </div>\r\n    )\r\n}","export default function Line({from,to, offset}) {\r\n    return (<line x1={from.x + offset} y1={from.y + offset} x2={to.x + offset} y2={to.y + offset} className=\"line\" />\r\n    )\r\n}","export default class Packet {\r\n    constructor(props) {\r\n        this.data = props.data || 'Hi :)'\r\n        this.destination = props.destination\r\n        this.route = []\r\n        this.station = null\r\n    }\r\n\r\n    get pos() { return this.station.pos}\r\n    get x() { return this.station.pos.x }\r\n    get y() { return this.station.pos.y }\r\n}","import { v4 as uuid } from 'uuid'\r\nimport Packet from './Packet'\r\n\r\nexport default class Node {\r\n    constructor() {\r\n        this.id = uuid()\r\n        this.pos = { x: 0, y: 0 }\r\n        this.peers = {}\r\n        this.packets = []\r\n\r\n        this.packetHandler = setInterval(() => {\r\n            this.handlePacket()\r\n        }, 3000);\r\n    }\r\n\r\n    get x() { return this.pos.x }\r\n    get y() { return this.pos.y }\r\n\r\n    updatePos = ({ x, y }) => {\r\n        this.pos = { x, y }\r\n    }\r\n\r\n    addPeer = (peer) => {\r\n        if (!this.peers[peer.id])\r\n            this.peers = { ...this.peers, [peer.id]: peer }\r\n    }\r\n\r\n    removePeer = (peer) => {\r\n        if (this.peers[peer.id])\r\n            delete this.peers[peer.id]\r\n    }\r\n\r\n    sendData = (data, destination) => {\r\n        const dest = Object.keys(this.peers)[0]\r\n        if (!dest) return\r\n\r\n        const packet = new Packet({\r\n            data: data,\r\n            destination: dest,\r\n            sourceID: this.id\r\n        })\r\n        this.recievePacket(packet)\r\n    }\r\n\r\n    relayPacket = (packet) => {\r\n        if (this.peers[packet.destination]) {\r\n            packet.route.push(this.id)\r\n            this.peers[packet.destination].recievePacket(packet)\r\n        } else\r\n            this.packets.push(packet)\r\n    }\r\n\r\n    recievePacket = (packet) => {\r\n        packet.station = this\r\n        this.packets.push(packet)\r\n    }\r\n\r\n    openPacket = (packet) => {\r\n        console.log('PACKET RECIEVED BY ' + this.id)\r\n        console.log('PACKET DATA: ' + packet.data)\r\n    }\r\n\r\n    handlePacket = () => {\r\n        const packet = this.packets.pop()\r\n\r\n        if (packet) {\r\n            if (packet.destination === this.id)\r\n                this.openPacket(packet)\r\n            else\r\n                this.relayPacket(packet)\r\n        }\r\n    }\r\n\r\n\r\n}","import { useEffect, useState } from 'react'\r\nimport Blip from './components/Blip'\r\nimport Bloop from './components/Bloop'\r\nimport Button from './components/Button'\r\nimport Line from './components/Line'\r\nimport Node from './objects/Node'\r\nimport { RANGE } from \"./config/config.js\"\r\n\r\n\r\nfunction App() {\r\n    const [nodes, setNodes] = useState({})\r\n    const [links, setLinks] = useState({})\r\n    const [highlightedNode, setHighlightedNode] = useState(null)\r\n\r\n    useEffect(() => {\r\n        createNode()\r\n    }, [])\r\n\r\n    function highlightNode(id) {\r\n        setHighlightedNode(id)\r\n    }\r\n\r\n    function createNode() {\r\n        const node = new Node()\r\n        setNodes({\r\n            [node.id]: node,\r\n            ...nodes\r\n        })\r\n    }\r\n\r\n    function destroyNode(node) {\r\n        const updateNodes = { ...nodes }\r\n\r\n        for (const peer of Object.values(updateNodes[node.id].peers)) {\r\n            delete peer.peers[node.id]\r\n        }\r\n\r\n        clearInterval(updateNodes[node.id].packetHandler)\r\n\r\n        delete updateNodes[node.id]\r\n\r\n        setNodes(updateNodes)\r\n    }\r\n\r\n    function updateNodePos(node, pos) {\r\n        const updatedNodes = { ...nodes }\r\n\r\n        updatedNodes[node.id].updatePos(pos)\r\n\r\n        Object.values(updatedNodes).forEach(neigh => {\r\n            if (node.id !== neigh.id) {\r\n                const d = Math.hypot(node.x - neigh.x, node.y - neigh.y)\r\n                if (d <= RANGE) {\r\n                    updatedNodes[node.id].addPeer(neigh)\r\n                    updatedNodes[neigh.id].addPeer(node)\r\n                } else {\r\n                    updatedNodes[node.id].removePeer(neigh)\r\n                    updatedNodes[neigh.id].removePeer(node)\r\n                }\r\n            }\r\n        })\r\n\r\n        setNodes(updatedNodes)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const updatedLinks = {}\r\n\r\n        for (const node of Object.values(nodes)) {\r\n            for (const peer of Object.values(node.peers)) {\r\n                const linkID = [node.id, peer.id].sort().join('+')\r\n                if (!updatedLinks[linkID]) {\r\n                    updatedLinks[linkID] = [node.pos, peer.pos]\r\n                }\r\n            }\r\n        }\r\n\r\n        setLinks(updatedLinks)\r\n\r\n    }, [nodes])\r\n\r\n    const mouseDownHandler = (node, event) => {\r\n        switch (event.button) {\r\n            case 0:\r\n                node.sendData()\r\n                break;\r\n            case 1:\r\n                destroyNode(node)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='h-screen w-full flex flex-col overflow-hidden'>\r\n            <div className='w-full relative z-50 bg-gray-800 border-b-2 border-gray-500 mx-auto flex justify-center items-center py-4'>\r\n                <Button\r\n                    title='Add Node'\r\n                    onClick={createNode}\r\n                />\r\n            </div>\r\n            <div className=\"relative bg-gray-700 flex-grow\">\r\n\r\n                {/* render nodes */}\r\n                {Object.keys(nodes).length > 0 ?\r\n                    Object.values(nodes).map(node =>\r\n                        <Blip\r\n                            key={node.id}\r\n                            node={node}\r\n                            onClick={(event) => mouseDownHandler(node, event)}\r\n                            onDrag={(pos) => updateNodePos(node, pos)} />\r\n                    )\r\n                    : null}\r\n\r\n                {/* render links between nodes */}\r\n                <svg width='100%' height='100%'>\r\n                    {Object.keys(links).map(linkID => {\r\n                        const [from, to] = links[linkID]\r\n                        return <Line\r\n                            key={linkID}\r\n                            from={from}\r\n                            to={to}\r\n                            offset={32} />\r\n                    })}\r\n                </svg>\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export const RANGE = 300","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}