{"version":3,"sources":["components/Blip.js","components/Bloop.js","components/Button.js","components/Line.js","lib/objects.js","App.js","config/config.js","reportWebVitals.js","index.js"],"names":["Blip","node","className","onDrag","onClick","pos","id","peers","defaultClassName","position","event","x","y","onMouseDown","bounds","Object","keys","length","map","peer","Bloop","to","from","offset","ref","useRef","useEffect","console","log","current","attributes","cx","value","cy","r","fill","Button","title","Line","x1","y1","x2","y2","Packet","props","this","uuid","data","destination","source","route","station","created","Date","now","Node","updatePos","addPeer","removePeer","sendData","packet","storeOutgoing","forwardPacket","push","storeIncoming","animatePacket","outgoing","openPacket","setTimeout","handleOutgoing","incoming","handleIncoming","shift","App","useState","nodes","setNodes","links","setLinks","packets","setPackets","canvas","updatedLinks","values","linkID","sort","join","mouseDownHandler","button","updateNodes","clearInterval","packetHandler","destroyNode","forEach","neigh","Math","hypot","updateNodePos","width","height","xmlns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3028d2a.chunk.js","sourcesContent":["import React from \"react\"\r\nimport Draggable from \"react-draggable\"\r\n\r\nexport default function Blip({ node, className, onDrag, onClick }) {\r\n    const { id, pos, peers } = node\r\n\r\n    return (\r\n        <Draggable\r\n            defaultClassName={`absolute ${className}`}\r\n            position={pos}\r\n            onDrag={(event, { x, y }) => onDrag({ x, y })}\r\n            onMouseDown={event => onClick(event)}\r\n            bounds='parent'\r\n        >\r\n            <div\r\n                className='node transition-color select-none font-mono text-white bg-green-600 rounded-full shadow-xl w-16 h-16 flex flex-col justify-center items-center hover:bg-green-500 overflow-visible whitespace-nowrap hover:animate-ping'>\r\n                <div className='text-xs font-bold'>{pos.x + ' ' + pos.y}</div>\r\n                <div className='flex-col text-xs peers hidden absolute left-full ml-2 p-1 bg-gray-500 rounded shadow-xl'>\r\n                    <p className='place-self-center'>{Object.keys(peers).length === 0 ? 'lonely...' : 'PEERS'}</p>\r\n                    <hr className='my-0.5' />\r\n                    {Object.keys(peers).map(peer => <p key={peer}>{peer}</p>)}\r\n                </div>\r\n\r\n                <div className='absolute transition-all duration-400 ease-out node-range z-0 bg-transparent rounded-full border w-0 h-0 opacity-0'></div>\r\n            </div>\r\n        </Draggable>\r\n    )\r\n}","import { useEffect, useRef } from \"react\"\r\n\r\nexport default function Bloop({ to, from, offset }) {\r\n    const ref = useRef()\r\n\r\n    useEffect(() => {\r\n        console.log('bloop')\r\n        ref.current.attributes.cx.value = to.x+offset\r\n        ref.current.attributes.cy.value = to.y+offset\r\n    }, [])\r\n\r\n    return (\r\n        // <div className='w-4 h-4 transform duration-500 -translate-y-1/2 -translate-x-1/2 rounded-full transition-all bg-yellow-400 hidden absolute' ref={ref}></div>\r\n        // <rect width=\"100\" height=\"100\">\r\n        //     <animate attributeName=\"rx\" values=\"0;500\" dur=\"1s\" repeatCount=\"indefinite\" />\r\n        // </rect>\r\n        <circle ref={ref} r=\"8\" cx={from.x+offset} cy={from.y+offset} fill=\"orange\" className='transition-all duration-500 ease-out' >\r\n        </circle>\r\n    )\r\n}","export default function Button({ onClick, title }) {\r\n    return (\r\n        <div className='rounded-lg border-2 border-gray-400'>\r\n            <button\r\n                title={title}\r\n                className='flex justify-center items-center font-bold text-white bg-blue-500 leading-none p-3 px-3 w-40 max-w-prose border-b-4  border-blue-800 rounded-md hover:bg-blue-400 active:border-b-2 -mt-0.5 active:mt-0'\r\n                onClick={onClick}\r\n            >{title}</button>\r\n        </div>\r\n    )\r\n}","export default function Line({from,to, offset}) {\r\n    return (<line x1={from.x + offset} y1={from.y + offset} x2={to.x + offset} y2={to.y + offset} className=\"line\" />\r\n    )\r\n}","import { v4 as uuid } from 'uuid'\r\n\r\nexport class Packet {\r\n    constructor(props) {\r\n        // only for react states. actual outgoing should not be uniquely identifiable\r\n        this.id = uuid()\r\n\r\n        this.data = props.data || 'Boop!'\r\n        this.destination = props.destination\r\n        this.source = props.source\r\n        this.route = []\r\n        this.station = props.station\r\n        this.created = Date.now()\r\n    }\r\n\r\n    // return packet's position\r\n    get pos() { return this.station.pos || null }\r\n    get x() { return this.station.pos.x }\r\n    get y() { return this.station.pos.y }\r\n}\r\n\r\n\r\nexport class Node {\r\n    constructor(props) {\r\n        this.id = uuid()\r\n        this.pos = { x: 0, y: 0 }\r\n        this.peers = {}\r\n        this.outgoing = []\r\n        this.incoming = []\r\n\r\n        this.animatePacket = props.animatePacket\r\n\r\n        // this.mingle = setInterval(() => {\r\n        //     for (const peer in this.peers) {\r\n        //         this.sendData(null, peer)\r\n        //     }\r\n        // }, 1000)\r\n\r\n        // this.incomingHandler = setInterval(() => {\r\n        //     this.handleIncoming()\r\n        // }, 500);\r\n\r\n        // this.outgoingHandler = setInterval(() => {\r\n        //     this.handleOutgoing()\r\n        // }, 500);\r\n    }\r\n\r\n    // return position's x and y\r\n    get x() { return this.pos.x }\r\n    get y() { return this.pos.y }\r\n\r\n    // update node position\r\n    updatePos = ({ x, y }) => {\r\n        this.pos = { x, y }\r\n    }\r\n\r\n\r\n    // =============== PEER METHODS ===============\r\n    // add peer\r\n    addPeer = (peer) => {\r\n        if (!this.peers[peer.id])\r\n            this.peers = { ...this.peers, [peer.id]: peer }\r\n    }\r\n\r\n    // remove peer\r\n    removePeer = (peer) => {\r\n        if (this.peers[peer.id])\r\n            delete this.peers[peer.id]\r\n    }\r\n\r\n\r\n    // =============== PACKET METHODS ===============\r\n    // create and send a packet\r\n    sendData = (data, destination) => {\r\n        if (!destination)\r\n            destination = Object.keys(this.peers)[0]\r\n\r\n        if (!destination)\r\n            return\r\n\r\n        const packet = new Packet({\r\n            data: data,\r\n            destination: destination,\r\n            source: this.id,\r\n            station: this\r\n        })\r\n\r\n        this.storeOutgoing(packet)\r\n    }\r\n\r\n\r\n    // forward packet if possible route present, otherwise put back in queue\r\n    forwardPacket = (packet) => {\r\n        if (this.peers[packet.destination]) {\r\n            packet.route.push(this.id)\r\n            this.peers[packet.destination].storeIncoming(packet)\r\n\r\n            this.animatePacket(this.pos, this.peers[packet.destination].pos, packet.id)\r\n\r\n        } else {\r\n            this.outgoing.push(packet)\r\n        }\r\n    }\r\n\r\n    // output data content of packet\r\n    openPacket = (packet) => {\r\n        // console.log('PACKET RECIEVED BY ' + this.id)\r\n        // console.log('PACKET DATA: ' + packet.data)\r\n    }\r\n\r\n    // recieve and store outgoing packet\r\n    storeOutgoing = (packet) => {\r\n        this.outgoing.push(packet)\r\n\r\n        setTimeout(() => {\r\n            this.handleOutgoing()\r\n        }, 1000);\r\n    }\r\n\r\n    // recieve and store incoming packet\r\n    storeIncoming = (packet) => {\r\n        packet.station = this\r\n        this.incoming.push(packet)\r\n\r\n        setTimeout(() => {\r\n            this.handleIncoming()\r\n        }, 1000);\r\n    }\r\n\r\n    handleIncoming = () => {\r\n        let packet = this.incoming.shift()\r\n\r\n        if (packet)\r\n            if (packet.destination === this.id)\r\n                this.openPacket(packet)\r\n            else\r\n                this.storeOutgoing(packet)\r\n    }\r\n\r\n    handleOutgoing = () => {\r\n        let packet = this.outgoing.shift()\r\n\r\n        if (packet)\r\n            this.forwardPacket(packet)\r\n    }\r\n\r\n}","import { useEffect, useState, useRef } from 'react'\r\nimport Blip from './components/Blip'\r\nimport Bloop from './components/Bloop'\r\nimport Button from './components/Button'\r\nimport Line from './components/Line'\r\nimport { Node } from './lib/objects'\r\nimport { RANGE } from \"./config/config.js\"\r\n\r\n\r\nfunction App() {\r\n    const [nodes, setNodes] = useState({})\r\n    const [links, setLinks] = useState({})\r\n    const [packets, setPackets] = useState([])\r\n    const [highlightedNode, setHighlightedNode] = useState(null)\r\n    const canvas = useRef()\r\n\r\n    function animatePacket(from, to, id) {\r\n        packets.push({ from, to, id })\r\n        setPackets([...packets])\r\n        \r\n        console.log(from.x,to.x)\r\n\r\n        setTimeout(() => {\r\n            packets.shift()\r\n            setPackets([...packets])\r\n        }, 500);\r\n    }\r\n\r\n    function updatePacketState(packet, action) {\r\n        // console.log(Object.keys(packets))\r\n        switch (action.toUpperCase()) {\r\n            case 'UPDATE':\r\n                packets[packet.id] = packet\r\n                setPackets({ ...packets })\r\n                break;\r\n\r\n            case 'DELETE':\r\n                delete packets[packet.id]\r\n                setPackets({ ...packets })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    function createNode() {\r\n        const node = new Node({ animatePacket })\r\n        setNodes({\r\n            [node.id]: node,\r\n            ...nodes\r\n        })\r\n    }\r\n\r\n    function destroyNode(node) {\r\n        const updateNodes = { ...nodes }\r\n\r\n        for (const peer of Object.values(updateNodes[node.id].peers)) {\r\n            delete peer.peers[node.id]\r\n        }\r\n\r\n        clearInterval(updateNodes[node.id].packetHandler)\r\n\r\n        delete updateNodes[node.id]\r\n\r\n        setNodes(updateNodes)\r\n    }\r\n\r\n    function updateNodePos(node, pos) {\r\n        nodes[node.id].updatePos(pos)\r\n\r\n        Object.values(nodes).forEach(neigh => {\r\n            if (node.id !== neigh.id) {\r\n                const d = Math.hypot(node.x - neigh.x, node.y - neigh.y)\r\n                if (d <= RANGE) {\r\n                    nodes[node.id].addPeer(neigh)\r\n                    nodes[neigh.id].addPeer(node)\r\n                } else {\r\n                    nodes[node.id].removePeer(neigh)\r\n                    nodes[neigh.id].removePeer(node)\r\n                }\r\n            }\r\n        })\r\n\r\n        setNodes({ ...nodes })\r\n    }\r\n\r\n    useEffect(() => {\r\n        const updatedLinks = {}\r\n\r\n        for (const node of Object.values(nodes)) {\r\n            for (const peer of Object.values(node.peers)) {\r\n                const linkID = [node.id, peer.id].sort().join('+')\r\n                if (!updatedLinks[linkID]) {\r\n                    updatedLinks[linkID] = [node.pos, peer.pos]\r\n                }\r\n            }\r\n        }\r\n\r\n        setLinks(updatedLinks)\r\n\r\n    }, [nodes])\r\n\r\n    const mouseDownHandler = (node, event) => {\r\n        switch (event.button) {\r\n            case 0:\r\n                node.sendData()\r\n                break;\r\n            case 1:\r\n                destroyNode(node)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='h-screen w-full flex flex-col overflow-hidden'>\r\n            <div className='w-full relative z-50 bg-gray-800 border-b-2 border-gray-500 mx-auto flex justify-center items-center py-4'>\r\n                <Button\r\n                    title='Add Node'\r\n                    onClick={createNode}\r\n                />\r\n            </div>\r\n            <div className=\"relative bg-gray-700 flex-grow\">\r\n\r\n                {/* render nodes */}\r\n                <div className='absolute z-20 w-full h-full'>\r\n                    {Object.keys(nodes).length > 0 ?\r\n                        Object.values(nodes).map(node =>\r\n                            <Blip\r\n                                key={node.id}\r\n                                node={node}\r\n                                onClick={(event) => mouseDownHandler(node, event)}\r\n                                onDrag={(pos) => updateNodePos(node, pos)} />\r\n                        )\r\n                        : null}\r\n                </div>\r\n\r\n                {/* render links between nodes */}\r\n                <svg ref={canvas} width='100%' height='100%' className='absolute z-0' xmlns=\"http://www.w3.org/2000/svg\">\r\n                    {Object.keys(links).map(linkID => {\r\n                        const [from, to] = links[linkID]\r\n                        return <Line\r\n                            key={linkID}\r\n                            from={from}\r\n                            to={to}\r\n                            offset={32} />\r\n                    })}\r\n\r\n                    {packets.map(packet => {\r\n                        return <Bloop\r\n                            key={packet.id}\r\n                            from={packet.from}\r\n                            to={packet.to}\r\n                            offset={32} />\r\n                    })}\r\n                </svg>\r\n\r\n                {/* render packets */}\r\n                <div className='relative z-10 w-full h-full'>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export const RANGE = 300","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}