{"version":3,"sources":["components/Blip.js","components/Bloop.js","components/Line.js","lib/objects.js","App.js","config/config.js","reportWebVitals.js","index.js"],"names":["Blip","node","className","onDrag","destroyNode","onClick","pos","id","peers","useRef","positionOffset","x","y","defaultClassName","position","event","onMouseDown","bounds","Bloop","ref","useEffect","r","cx","cy","fill","Line","from","to","x1","y1","x2","y2","Packet","props","this","uuid","data","destination","source","route","station","created","Date","now","suspended","Node","packets","updatePacketState","mingle","setInterval","setTimeout","sendData","Object","keys","Math","floor","random","length","peer","packet","storePacket","push","handlePackets","shift","openPacket","forwardPacket","values","clearInterval","clearPackets","clearPeers","App","useState","nodes","setNodes","links","setLinks","setPackets","packetsRef","action","toUpperCase","current","createNode","updateNetworkByNode","updatedNodes","updatedLinks","suspend","sort","join","forEach","neigh","d","hypot","linkID","addPeer","removePeer","title","onDoubleClick","nativeEvent","layerX","layerY","doubleClickHandler","map","button","mouseDownHandler","width","height","xmlns","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAMe,SAASA,EAAT,GAAkE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,OAAQC,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,QACrDC,GAAeL,EAAnBM,GAAmBN,EAAfK,KAAeL,EAAVO,MACLC,mBAEZ,OACI,cAAC,IAAD,CAEIC,eAAgB,CAAEC,GAAI,GAAIC,GAAI,IAC9BC,iBAAgB,kCAA6BX,GAC7CY,SAAUR,EACVH,OAAQ,SAACY,EAAD,OAAUJ,EAAV,EAAUA,EAAGC,EAAb,EAAaA,EAAb,OAAqBT,EAAO,CAAEQ,IAAGC,OACzCI,YAAa,SAAAD,GAAK,OAAIV,EAAQU,IAC9BE,OAAO,SAPX,SASI,sBACIf,UAAU,yJADd,UAEI,qBAAKA,UAAU,2HAAf,SAA2II,EAAIK,EAAI,IAAML,EAAIM,IAM7J,sBAAKV,UAAU,0HAAf,UACI,wBACIA,UAAU,sFACVG,QAAS,KAFb,SAGI,cAAC,IAAD,CACIH,UAAU,2DAGlB,wBACIA,UAAU,qFACVG,QAASD,EAFb,SAGI,cAAC,IAAD,CACIF,UAAU,oBAItB,qBAAKA,UAAU,2HC1ChB,SAASgB,EAAT,GAA2B,IAAVZ,EAAS,EAATA,IACtBa,EAAMV,mBAKZ,OAHAW,qBAAU,cACP,IAGC,wBAAQD,IAAKA,EAAKE,EAAE,IAAIC,GAAIhB,EAAIK,EAAGY,GAAIjB,EAAIM,EAAGY,KAAK,SAAStB,UAAU,gDCT/D,SAASuB,EAAT,GAA6B,IAAbC,EAAY,EAAZA,KAAMC,EAAM,EAANA,GACjC,OAAQ,sBAAMC,GAAIF,EAAKf,EAAGkB,GAAIH,EAAKd,EAAGkB,GAAIH,EAAGhB,EAAGoB,GAAIJ,EAAGf,EAAGV,UAAU,S,2BCC3D8B,EAAb,WACI,WAAYC,GAAQ,oBAEhBC,KAAK3B,GAAK4B,cAEVD,KAAKE,KAAOH,EAAMG,MAAQ,QAC1BF,KAAKG,YAAcJ,EAAMI,YACzBH,KAAKI,OAASL,EAAMK,OACpBJ,KAAKK,MAAQ,GACbL,KAAKM,QAAUP,EAAMO,QACrBN,KAAKO,QAAUC,KAAKC,MACpBT,KAAKU,WAAY,EAXzB,qCAeI,WAAY,OAAOV,KAAKM,QAAQlC,KAAO,OAf3C,aAgBI,WAAU,OAAO4B,KAAKM,QAAQlC,IAAIK,IAhBtC,aAiBI,WAAU,OAAOuB,KAAKM,QAAQlC,IAAIM,MAjBtC,KAqBaiC,EAAb,WACI,WAAYZ,GAAQ,IAAD,2BACfC,KAAK3B,GAAK4B,cACVD,KAAK5B,IAAM2B,EAAM3B,KAAO,CAAEK,EAAG,EAAGC,EAAG,GACnCsB,KAAK1B,MAAQ,GACb0B,KAAKY,QAAU,GAEfZ,KAAKa,kBAAoBd,EAAMc,kBAE/Bb,KAAKc,OAASC,aAAY,WACtBC,YAAW,WACH,EAAKN,WACT,EAAKO,SAAS,KAAMC,OAAOC,KAAK,EAAK7C,OACjC8C,KAAKC,MAAMD,KAAKE,SAAWJ,OAAOC,KAAK,EAAK7C,OAAOiD,YAExC,KAAhBH,KAAKE,YACT,KAhBX,mCAoBI,WAAU,OAAOtB,KAAK5B,IAAIK,IApB9B,aAqBI,WAAU,OAAOuB,KAAK5B,IAAIM,IArB9B,uBAwBI,YAAqB,IAATD,EAAQ,EAARA,EAAGC,EAAK,EAALA,EACXsB,KAAK5B,IAAM,CAAEK,IAAGC,OAzBxB,qBA+BI,SAAQ8C,GACCxB,KAAK1B,MAAMkD,EAAKnD,MACjB2B,KAAK1B,MAAL,2BAAkB0B,KAAK1B,OAAvB,kBAA+BkD,EAAKnD,GAAKmD,OAjCrD,wBAqCI,SAAWA,GACHxB,KAAK1B,MAAMkD,EAAKnD,YACT2B,KAAK1B,MAAMkD,EAAKnD,MAvCnC,sBA6CI,SAAS6B,EAAMC,GACX,GAAKA,EAAL,CAGA,IAAMsB,EAAS,IAAI3B,EAAO,CACtBI,KAAMA,EACNC,YAAaA,EACbC,OAAQJ,KAAK3B,GACbiC,QAASN,OAGbA,KAAK0B,YAAYD,GACjBzB,KAAKa,kBAAkBY,EAAQ,aAzDvC,2BA8DI,SAAcA,GACNzB,KAAK1B,MAAMmD,EAAOtB,cAClBsB,EAAOpB,MAAMsB,KAAK3B,KAAK3B,IACvB2B,KAAK1B,MAAMmD,EAAOtB,aAAauB,YAAYD,GAE3CzB,KAAKa,kBAAkBY,EAAQ,WAG/BzB,KAAK0B,YAAYD,KAtE7B,wBA2EI,SAAWA,GACPzB,KAAKa,kBAAkBY,EAAQ,YA5EvC,yBAkFI,SAAYA,GACRA,EAAOnB,QAAUN,KACjBA,KAAKY,QAAQe,KAAKF,GAElBzB,KAAK4B,kBAtFb,2BAyFI,WAAiB,IACTH,EADQ,OAGZ,IACIA,EAASzB,KAAKY,QAAQiB,UAERrB,KAAKC,MAAQgB,EAAOlB,QAAU,KACxCP,KAAKa,kBAAkBY,EAAQ,gBAE9BA,GAAUjB,KAAKC,MAAQgB,EAAOlB,QAAU,KAE7CkB,GACAT,YAAW,WACH,EAAKN,UACL,EAAKG,kBAAkBY,EAAQ,UAE3BA,EAAOtB,cAAgB,EAAK9B,GAC5B,EAAKyD,WAAWL,GAEhB,EAAKM,cAAcN,KAE5B,OA9Gf,0BAiHI,WAGI,IAFA,IAAIA,EAASzB,KAAKY,QAAQiB,QAEnBJ,GACHzB,KAAKa,kBAAkBY,EAAQ,UAC/BA,EAASzB,KAAKY,QAAQiB,UAtHlC,wBA0HI,WACI,cAAmBX,OAAOc,OAAOhC,KAAK1B,OAAtC,eAA8C,QAA/B,KACCA,MAAM0B,KAAK3B,OA5HnC,qBAgII,WACI2B,KAAKU,WAAY,EACjBuB,cAAcjC,KAAKc,QACnBd,KAAKkC,eACLlC,KAAKmC,iBApIb,KCkKeC,MAjLf,WACI,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,IAAvC,mBAAOzB,EAAP,KAAgB8B,EAAhB,KACMC,EAAapE,iBAAO,IAGpBsC,EAAoB,SAACY,EAAQmB,GAC/B,OAAQA,EAAOC,eACX,IAAK,SACL,IAAK,SACDF,EAAWG,QAAQrB,EAAOpD,IAAMoD,EAChCiB,EAAW,eAAKC,EAAWG,UAC3B,MAEJ,IAAK,gBACMH,EAAWG,QAAQrB,EAAOpD,IACjCqE,EAAW,eAAKC,EAAWG,YAQjCC,EAAa,SAAC3E,GAChB,IAAML,EAAO,IAAI4C,EAAK,CAAEvC,MAAKyC,sBAC7BmC,EAAoBjF,IAGlBG,EAAc,SAACH,GAEjB,IAAMkF,EAAY,eAAQX,GACpBY,EAAY,eAAQV,GAE1BzE,EAAKoF,UAEL,cAAmBjC,OAAOc,OAAOiB,EAAalF,EAAKM,IAAIC,OAAvD,eAA+D,CAA1D,IAAMkD,EAAI,YAGJ0B,EAFQ,CAACnF,EAAKM,GAAImD,EAAKnD,IAAI+E,OAAOC,KAAK,aAM3CJ,EAAalF,EAAKM,IAEzBkE,EAASU,GACTR,EAASS,IAGPF,EAAsB,SAACjF,EAAMK,GAC/B,IAAM6E,EAAY,2BAAQX,GAAR,kBAAgBvE,EAAKM,GAAKN,IACtCmF,EAAY,eAAQV,GAEtBpE,IACAL,EAAKK,IAAMA,GAEf8C,OAAOc,OAAOiB,GAAcK,SAAQ,SAAAC,GAChC,GAAIxF,EAAKM,KAAOkF,EAAMlF,GAAI,CAEtB,IAAMmF,EAAIpC,KAAKqC,MAAM1F,EAAKK,IAAIK,EAAI8E,EAAMnF,IAAIK,EAAGV,EAAKK,IAAIM,EAAI6E,EAAMnF,IAAIM,GAChEgF,EAAS,CAAC3F,EAAKM,GAAIkF,EAAMlF,IAAI+E,OAAOC,KAAK,KAE3CG,GCvEC,KDwEDN,EAAaQ,GAAU,CAAElE,KAAMzB,EAAKK,IAAKqB,GAAI8D,EAAMnF,KACnD6E,EAAalF,EAAKM,IAAIsF,QAAQJ,GAC9BN,EAAaM,EAAMlF,IAAIsF,QAAQ5F,YAExBmF,EAAaQ,GACpBT,EAAalF,EAAKM,IAAIuF,WAAWL,GACjCN,EAAaM,EAAMlF,IAAIuF,WAAW7F,QAK9CwE,EAASU,GACTR,EAASS,IA+Bb,OACI,sBAAKlF,UAAU,gDAAf,UACI,sBAAKA,UAAU,kHAAf,UAEI,qBAAKA,UAAU,sCAAf,SACI,wBACI6F,MAAO,WACP7F,UAAU,0MACVG,QAAS,kBAAM4E,KAHnB,SAIE,eAGN,qBAAK/E,UAAU,sCAAf,SACI,wBACI6F,MAAO,QACP7F,UAAU,uMACVG,QA5CC,WACjB,cAAmB+C,OAAOc,OAAOM,GAAjC,eAAyC,CAA1B,KACNa,UAGTR,EAAWG,QAAU,GACrBP,EAAS,IACTE,EAAS,IACTC,EAAW,KAiCC,SAIE,eAIV,sBAAK1E,UAAU,qDAAf,UAEI,sBAAKA,UAAU,yEAAf,UACI,8BAAG,kDAAH,yBACA,8BAAG,kDAAH,yBAIJ,qBACI8F,cAAe,SAAAjF,GAAK,OArCT,SAACA,GACxB,MAAiCA,EAAMkF,YAAvBtF,EAAhB,EAAQuF,OAAmBtF,EAA3B,EAAmBuF,OACnBlB,EAAW,CAAEtE,IAAGC,MAmCoBwF,CAAmBrF,IAC3Cb,UAAU,8BAFd,SAGKkD,OAAOC,KAAKmB,GAAOf,OAAS,EACzBL,OAAOc,OAAOM,GAAO6B,KAAI,SAAApG,GAAI,OACzB,cAACD,EAAD,CAEIC,KAAMA,EACNG,YAAa,kBAAMA,EAAYH,IAC/BI,QAAS,SAACU,GAAD,OAvDZ,SAACd,EAAMc,GAC5B,OAAQA,EAAMuF,QACV,KAAK,EACDlG,EAAYH,IAoDwBsG,CAAiBtG,EAAMc,IAC3CZ,OAAQ,SAACG,GAAD,OAAS4E,EAAoBjF,EAAMK,KAJtCL,EAAKM,OAMhB,OAIV,sBAAKiG,MAAM,OAAOC,OAAO,OAAOvG,UAAU,eAAewG,MAAM,6BAA/D,UACKtD,OAAOC,KAAKqB,GAAO2B,KAAI,SAAAT,GACpB,MAAqBlB,EAAMkB,GAAnBlE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,GACd,OAAO,cAACF,EAAD,CAEHC,KAAMA,EACNC,GAAIA,GAFCiE,MAKZxC,OAAOC,KAAKP,GAASuD,KAAI,SAAA9F,GACtB,OAAO,cAACW,EAAD,CAEHZ,IAAKwC,EAAQvC,GAAID,KADZC,SAMjB,qBAAKL,UAAU,sDErKhByG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98cca133.chunk.js","sourcesContent":["import React, { useRef } from \"react\"\r\nimport Draggable from \"react-draggable\"\r\nimport Button from \"./Button\"\r\nimport { RiSendPlaneFill, RiDeleteBin5Fill } from \"react-icons/ri\";\r\n\r\n\r\nexport default function Blip({ node, className, onDrag, destroyNode, onClick }) {\r\n    const { id, pos, peers } = node\r\n    const ref = useRef()\r\n\r\n    return (\r\n        <Draggable\r\n            // nodeRef={ref}\r\n            positionOffset={{ x: -32, y: -32 }}\r\n            defaultClassName={`absolute node-container ${className}`}\r\n            position={pos}\r\n            onDrag={(event, { x, y }) => onDrag({ x, y })}\r\n            onMouseDown={event => onClick(event)}\r\n            bounds='parent'\r\n        >\r\n            <div\r\n                className='node transition-color select-none font-mono text-white flex flex-col justify-center items-center overflow-visible whitespace-nowrap hover:animate-ping'>\r\n                <div className='text-xs flex justify-center items-center font-bold bg-green-600 hover:bg-green-500 w-16 h-16 z-20 rounded-full shadow-xl'>{pos.x + ' ' + pos.y}</div>\r\n                {/* <div className='flex-col text-xs peers hidden absolute left-full ml-2 p-1 bg-gray-500 rounded shadow-xl'>\r\n                    <p className='place-self-center'>{Object.keys(peers).length === 0 ? 'lonely...' : 'PEERS'}</p>\r\n                    <hr className='my-0.5' />\r\n                    {Object.keys(peers).map(peer => <p key={peer}>{peer}</p>)}\r\n                </div> */}\r\n                <div className='hidden controls absolute z-0 top-full bg-gray-600 rounded-b-full p-1 pt-6 -mt-4 flex-col justify-end items-center gap-1'>\r\n                    <button\r\n                        className='rounded-full bg-gray-500 hover:bg-blue-500 w-8 h-8 flex justify-center items-center'\r\n                        onClick={null} >\r\n                        <RiSendPlaneFill\r\n                            className='text-white transform translate-y-0.5 -translate-x-px'\r\n                        />\r\n                    </button>\r\n                    <button\r\n                        className='rounded-full bg-gray-500 hover:bg-red-600 w-8 h-8 flex justify-center items-center'\r\n                        onClick={destroyNode} >\r\n                        <RiDeleteBin5Fill\r\n                            className='text-white'\r\n                        />\r\n                    </button>\r\n                </div>\r\n                <div className='absolute transition-all duration-400 ease-out node-range z-0 bg-transparent rounded-full border w-0 h-0 opacity-0'></div>\r\n            </div>\r\n        </Draggable>\r\n    )\r\n}","import { useEffect, useRef } from \"react\"\r\n\r\nexport default function Bloop({ pos,  }) {\r\n    const ref = useRef()\r\n\r\n    useEffect(() => {\r\n    }, [])\r\n\r\n    return (\r\n        <circle ref={ref} r=\"8\" cx={pos.x} cy={pos.y} fill=\"orange\" className='packet transition-all duration-500 ease-out' />\r\n    )\r\n}","export default function Line({ from, to }) {\r\n    return (<line x1={from.x} y1={from.y} x2={to.x} y2={to.y} className=\"line\" />\r\n    )\r\n}","import { v4 as uuid } from 'uuid'\r\n\r\nexport class Packet {\r\n    constructor(props) {\r\n        // only for react states. actual outgoing should not be uniquely identifiable\r\n        this.id = uuid()\r\n\r\n        this.data = props.data || 'Boop!'\r\n        this.destination = props.destination\r\n        this.source = props.source\r\n        this.route = []\r\n        this.station = props.station\r\n        this.created = Date.now()\r\n        this.suspended = false\r\n    }\r\n\r\n    // return packet's position\r\n    get pos() { return this.station.pos || null }\r\n    get x() { return this.station.pos.x }\r\n    get y() { return this.station.pos.y }\r\n}\r\n\r\n\r\nexport class Node {\r\n    constructor(props) {\r\n        this.id = uuid()\r\n        this.pos = props.pos || { x: 0, y: 0 }\r\n        this.peers = {}\r\n        this.packets = []\r\n\r\n        this.updatePacketState = props.updatePacketState\r\n\r\n        this.mingle = setInterval(() => {\r\n            setTimeout(() => {\r\n                if (this.suspended) return;\r\n                this.sendData(null, Object.keys(this.peers)[\r\n                    Math.floor(Math.random() * Object.keys(this.peers).length)\r\n                ])\r\n            }, Math.random() * 1200);\r\n        }, 800);\r\n    }\r\n\r\n    // return position's x and y\r\n    get x() { return this.pos.x }\r\n    get y() { return this.pos.y }\r\n\r\n    // update node position\r\n    updatePos({ x, y }) {\r\n        this.pos = { x, y }\r\n    }\r\n\r\n\r\n    // =============== PEER METHODS ===============\r\n    // add peer\r\n    addPeer(peer) {\r\n        if (!this.peers[peer.id])\r\n            this.peers = { ...this.peers, [peer.id]: peer }\r\n    }\r\n\r\n    // remove peer\r\n    removePeer(peer) {\r\n        if (this.peers[peer.id])\r\n            delete this.peers[peer.id]\r\n    }\r\n\r\n\r\n    // =============== PACKET METHODS ===============\r\n    // create and send a packet\r\n    sendData(data, destination) {\r\n        if (!destination)\r\n            return\r\n\r\n        const packet = new Packet({\r\n            data: data,\r\n            destination: destination,\r\n            source: this.id,\r\n            station: this\r\n        })\r\n\r\n        this.storePacket(packet)\r\n        this.updatePacketState(packet, 'CREATE')\r\n    }\r\n\r\n\r\n    // forward packet if possible route present, otherwise put back in queue\r\n    forwardPacket(packet) {\r\n        if (this.peers[packet.destination]) {\r\n            packet.route.push(this.id)\r\n            this.peers[packet.destination].storePacket(packet)\r\n\r\n            this.updatePacketState(packet, 'UPDATE')\r\n\r\n        } else {\r\n            this.storePacket(packet)\r\n        }\r\n    }\r\n\r\n    // output data content of packet\r\n    openPacket(packet) {\r\n        this.updatePacketState(packet, 'DELETE')\r\n        // console.log('PACKET RECIEVED BY ' + this.id)\r\n        // console.log('PACKET DATA: ' + packet.data)\r\n    }\r\n\r\n    // recieve and store incoming packet\r\n    storePacket(packet) {\r\n        packet.station = this\r\n        this.packets.push(packet)\r\n\r\n        this.handlePackets()\r\n    }\r\n\r\n    handlePackets() {\r\n        let packet\r\n\r\n        do {\r\n            packet = this.packets.shift()\r\n\r\n            if (packet && Date.now() - packet.created > 5000)\r\n                this.updatePacketState(packet, 'DELETE')\r\n\r\n        } while (packet && Date.now() - packet.created > 5000)\r\n\r\n        if (packet)\r\n            setTimeout(() => {\r\n                if (this.suspended) {\r\n                    this.updatePacketState(packet, 'DELETE')\r\n                } else {\r\n                    if (packet.destination === this.id)\r\n                        this.openPacket(packet)\r\n                    else\r\n                        this.forwardPacket(packet)\r\n                }\r\n            }, 600);\r\n    }\r\n\r\n    clearPackets() {\r\n        let packet = this.packets.shift()\r\n\r\n        while (packet) {\r\n            this.updatePacketState(packet, 'DELETE')\r\n            packet = this.packets.shift()\r\n        }\r\n    }\r\n\r\n    clearPeers() {\r\n        for (const peer of Object.values(this.peers)) {\r\n            delete peer.peers[this.id]\r\n        }\r\n    }\r\n\r\n    suspend() {\r\n        this.suspended = true\r\n        clearInterval(this.mingle)\r\n        this.clearPackets()\r\n        this.clearPeers()\r\n    }\r\n}","import { useEffect, useState, useRef } from 'react'\r\nimport Blip from './components/Blip'\r\nimport Bloop from './components/Bloop'\r\nimport Button from './components/Button'\r\nimport Line from './components/Line'\r\nimport { Node } from './lib/objects'\r\nimport { RANGE } from \"./config/config.js\"\r\n\r\nfunction App() {\r\n    const [nodes, setNodes] = useState({})\r\n    const [links, setLinks] = useState({})\r\n    const [packets, setPackets] = useState({})\r\n    const packetsRef = useRef({})\r\n\r\n\r\n    const updatePacketState = (packet, action) => {\r\n        switch (action.toUpperCase()) {\r\n            case 'CREATE':\r\n            case 'UPDATE':\r\n                packetsRef.current[packet.id] = packet\r\n                setPackets({ ...packetsRef.current })\r\n                break;\r\n\r\n            case 'DELETE':\r\n                delete packetsRef.current[packet.id]\r\n                setPackets({ ...packetsRef.current })\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const createNode = (pos) => {\r\n        const node = new Node({ pos, updatePacketState })\r\n        updateNetworkByNode(node)\r\n    }\r\n\r\n    const destroyNode = (node) => {\r\n        // console.log('deleting')\r\n        const updatedNodes = { ...nodes }\r\n        const updatedLinks = { ...links }\r\n\r\n        node.suspend()\r\n\r\n        for (const peer of Object.values(updatedNodes[node.id].peers)) {\r\n            const linkID = [node.id, peer.id].sort().join('+')\r\n\r\n            delete updatedLinks[linkID]\r\n            // delete peer.peers[node.id]\r\n        }\r\n\r\n        delete updatedNodes[node.id]\r\n\r\n        setNodes(updatedNodes)\r\n        setLinks(updatedLinks)\r\n    }\r\n\r\n    const updateNetworkByNode = (node, pos) => {\r\n        const updatedNodes = { ...nodes, [node.id]: node }\r\n        const updatedLinks = { ...links }\r\n\r\n        if (pos)\r\n            node.pos = pos\r\n\r\n        Object.values(updatedNodes).forEach(neigh => {\r\n            if (node.id !== neigh.id) {\r\n\r\n                const d = Math.hypot(node.pos.x - neigh.pos.x, node.pos.y - neigh.pos.y)\r\n                const linkID = [node.id, neigh.id].sort().join('+')\r\n\r\n                if (d <= RANGE) {\r\n                    updatedLinks[linkID] = { from: node.pos, to: neigh.pos }\r\n                    updatedNodes[node.id].addPeer(neigh)\r\n                    updatedNodes[neigh.id].addPeer(node)\r\n                } else {\r\n                    delete updatedLinks[linkID]\r\n                    updatedNodes[node.id].removePeer(neigh)\r\n                    updatedNodes[neigh.id].removePeer(node)\r\n                }\r\n            }\r\n        })\r\n\r\n        setNodes(updatedNodes)\r\n        setLinks(updatedLinks)\r\n    }\r\n\r\n    const clearNetwork = () => {\r\n        for (const node of Object.values(nodes)) {\r\n            node.suspend()\r\n        }\r\n\r\n        packetsRef.current = {}\r\n        setNodes({})\r\n        setLinks({})\r\n        setPackets({})\r\n    }\r\n\r\n    const mouseDownHandler = (node, event) => {\r\n        switch (event.button) {\r\n            case 1:\r\n                destroyNode(node)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const doubleClickHandler = (event) => {\r\n        const { layerX: x, layerY: y } = event.nativeEvent\r\n        createNode({ x, y })\r\n    }\r\n\r\n    // useEffect(() => console.log(packets), [packets])\r\n\r\n    return (\r\n        <div className='h-screen w-full flex flex-col overflow-hidden'>\r\n            <div className='w-full relative z-50 bg-gray-800 border-b-2 border-gray-500 mx-auto flex justify-center items-center py-4 gap-8'>\r\n\r\n                <div className='rounded-lg border-2 border-gray-400'>\r\n                    <button\r\n                        title={'Add Node'}\r\n                        className='flex justify-center items-center font-bold text-white  leading-none rounded-md p-3 px-3 w-40 max-w-prose border-b-4 border-blue-800 hover:bg-blue-400 bg-blue-500 active:border-b-2 -mt-0.5 active:mt-0'\r\n                        onClick={() => createNode()}\r\n                    >{'Add Node'}</button>\r\n                </div>\r\n\r\n                <div className='rounded-lg border-2 border-gray-400'>\r\n                    <button\r\n                        title={'Clear'}\r\n                        className='flex justify-center items-center font-bold text-white  leading-none rounded-md p-3 px-3 w-40 max-w-prose border-b-4 border-red-800 hover:bg-red-400 bg-red-500 active:border-b-2 -mt-0.5 active:mt-0'\r\n                        onClick={clearNetwork}\r\n                    >{'Clear'}</button>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"relative bg-gray-700 flex-grow justify-center flex\">\r\n\r\n                <div className='bg-gray-600 absolute top-0 text-white p-2 px-4 rounded-b-xl opacity-80'>\r\n                    <p><strong>Double click</strong> to create new node</p>\r\n                    <p><strong>Middle click</strong> to destroy node</p>\r\n                </div>\r\n\r\n                {/* render nodes */}\r\n                <div\r\n                    onDoubleClick={event => doubleClickHandler(event)}\r\n                    className='absolute z-20 w-full h-full'>\r\n                    {Object.keys(nodes).length > 0 ?\r\n                        Object.values(nodes).map(node =>\r\n                            <Blip\r\n                                key={node.id}\r\n                                node={node}\r\n                                destroyNode={() => destroyNode(node)}\r\n                                onClick={(event) => mouseDownHandler(node, event)}\r\n                                onDrag={(pos) => updateNetworkByNode(node, pos)} />\r\n                        )\r\n                        : null}\r\n                </div>\r\n\r\n                {/* render links between nodes */}\r\n                <svg width='100%' height='100%' className='absolute z-0' xmlns=\"http://www.w3.org/2000/svg\">\r\n                    {Object.keys(links).map(linkID => {\r\n                        const { from, to } = links[linkID]\r\n                        return <Line\r\n                            key={linkID}\r\n                            from={from}\r\n                            to={to} />\r\n                    })}\r\n\r\n                    {Object.keys(packets).map(id => {\r\n                        return <Bloop\r\n                            key={id}\r\n                            pos={packets[id].pos} />\r\n                    })}\r\n                </svg>\r\n\r\n                {/* render packets */}\r\n                <div className='relative z-10 w-full h-full transition-all'>\r\n                </div>\r\n\r\n            </div>\r\n        </div >\r\n    );\r\n}\r\n\r\nexport default App;\r\n","export const RANGE = 300","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}